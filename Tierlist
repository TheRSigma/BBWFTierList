<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pokémon TCG Tier List - Black Bolt & White Flare</title>
    <style>
        :root {
            --black-bolt: #2c3e50;
            --white-flare: #4a6491;
            --highlight: #e74c3c;
            --webcam-size: 200px;
        }
        
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
            position: relative;
        }
        
        /* Streamer Mode */
        .streamer-controls {
            position: fixed;
            top: 10px;
            right: 10px;
            z-index: 1000;
            background: white;
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        
        .webcam-cutout {
            position: fixed;
            width: var(--webcam-size);
            height: var(--webcam-size);
            border: 3px solid var(--highlight);
            border-radius: 50%;
            background-color: rgba(0,0,0,0.3);
            display: none;
            z-index: 900;
        }
        
        .webcam-bottom-right {
            bottom: 20px;
            right: 20px;
        }
        
        .webcam-middle-right {
            top: 50%;
            right: 20px;
            transform: translateY(-50%);
        }
        
        /* Tier Customization */
        .tier-header input {
            background: transparent;
            border: none;
            color: white;
            font-weight: bold;
            font-size: 1.2em;
            text-align: center;
            width: 80%;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
        }
        
        /* Card Grid */
        .header {
            text-align: center;
            padding: 20px;
            background: linear-gradient(135deg, var(--black-bolt) 0%, var(--white-flare) 100%);
            color: white;
            margin-bottom: 20px;
            border-radius: 8px;
        }
        
        .set-logos {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-bottom: 15px;
        }
        
        .controls {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-bottom: 20px;
        }
        
        button {
            padding: 10px 20px;
            background-color: var(--highlight);
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1em;
        }
        
        .tier-list-container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
        
        .tier {
            display: flex;
            margin-bottom: 15px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.08);
            min-height: 180px;
            border: 1px solid #eee;
        }
        
        .tier-header {
            width: 180px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.3em;
            color: white;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
        }
        
        .tier-items {
            display: flex;
            flex-wrap: wrap;
            flex-grow: 1;
            padding: 15px;
            gap: 15px;
            min-height: 150px;
            align-items: center;
        }
        
        .card-pool {
            margin-top: 30px;
        }
        
        .cards-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
            gap: 15px;
        }
        
        .card {
            width: 160px;
            cursor: grab;
            transition: all 0.2s ease;
            text-align: center;
        }
        
        .card img {
            width: 100%;
            height: 220px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: transform 0.2s;
        }
        
        .card:hover img {
            transform: translateY(-5px);
        }
        
        .card-info {
            margin-top: 8px;
        }
        
        .card-name {
            font-weight: bold;
            display: block;
        }
        
        .card-number {
            font-size: 0.9em;
            color: #666;
            display: block;
        }
        
        /* Tier Colors */
        .tier[data-tier="S"] .tier-header { background: linear-gradient(135deg, #ff7b00 0%, #ff2e63 100%); }
        .tier[data-tier="A"] .tier-header { background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%); }
        .tier[data-tier="B"] .tier-header { background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%); color: #111; }
        .tier[data-tier="C"] .tier-header { background: linear-gradient(135deg, #f7971e 0%, #ffd200 100%); color: #111; }
        .tier[data-tier="D"] .tier-header { background: linear-gradient(135deg, #8e9eab 0%, #eef2f3 100%); color: #111; }
        
        /* Responsive */
        @media (max-width: 768px) {
            .cards-grid {
                grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
            }
            .card img {
                height: 200px;
            }
            .tier-header {
                width: 120px;
                font-size: 1.1em;
            }
        }
    </style>
</head>
<body>
    <!-- Streamer Controls -->
    <div class="streamer-controls">
        <label>
            <input type="checkbox" id="streamer-mode"> Streamer Mode
        </label>
        <select id="webcam-position" disabled>
            <option value="bottom-right">Bottom Right</option>
            <option value="middle-right">Middle Right</option>
        </select>
    </div>
    
    <!-- Webcam Cutout -->
    <div class="webcam-cutout" id="webcam-cutout"></div>
    
    <div class="header">
        <div class="set-logos">
            <img src="https://www.serebii.net/scarletviolet/blackbolt/logo.png" alt="Black Bolt" class="set-logo">
            <img src="https://www.serebii.net/scarletviolet/whiteflare/logo.png" alt="White Flare" class="set-logo">
        </div>
        <h1>Pokémon TCG Tier List</h1>
        <h2>Black Bolt & White Flare Illustration Rares</h2>
    </div>
    
    <div class="controls">
        <button id="save-btn">Save Tier List</button>
        <button id="reset-btn">Reset Tier List</button>
    </div>
    
    <div class="tier-list-container">
        <!-- Editable Tiers -->
        <div class="tier" data-tier="S">
            <div class="tier-header">
                <input type="text" value="S Tier (Masterpieces)" class="tier-name-input">
            </div>
            <div class="tier-items"></div>
        </div>
        
        <div class="tier" data-tier="A">
            <div class="tier-header">
                <input type="text" value="A Tier (Excellent)" class="tier-name-input">
            </div>
            <div class="tier-items"></div>
        </div>
        
        <div class="tier" data-tier="B">
            <div class="tier-header">
                <input type="text" value="B Tier (Great)" class="tier-name-input">
            </div>
            <div class="tier-items"></div>
        </div>
        
        <div class="tier" data-tier="C">
            <div class="tier-header">
                <input type="text" value="C Tier (Good)" class="tier-name-input">
            </div>
            <div class="tier-items"></div>
        </div>
        
        <div class="tier" data-tier="D">
            <div class="tier-header">
                <input type="text" value="D Tier (Average)" class="tier-name-input">
            </div>
            <div class="tier-items"></div>
        </div>
    </div>
    
    <!-- Combined Card Pool -->
    <div class="card-pool">
        <h3>All Illustration Rares (Sorted by Dex #)</h3>
        <div class="cards-grid" id="card-pool">
            <!-- Generation 5 -->
            <div class="card" draggable="true" data-id="sv11b-087" data-name="Snivy" data-number="087/173" data-dex="495" data-set="blackbolt">
                <img src="https://github.com/TheRSigma/BBWFTierList/blob/main/images/blackbolt-87.jpg?raw=true" alt="Snivy" loading="lazy">
                <div class="card-info">
                    <span class="card-name">Snivy</span>
                    <span class="card-number">087/173 (#495)</span>
                </div>
            </div>
            
            <div class="card" draggable="true" data-id="sv11w-087" data-name="Sewaddle" data-number="087/173" data-dex="540" data-set="whiteflare">
                <img src="https://github.com/TheRSigma/BBWFTierList/blob/main/images/whiteflare-87.jpg?raw=true" alt="Sewaddle" loading="lazy">
                <div class="card-info">
                    <span class="card-name">Sewaddle</span>
                    <span class="card-number">087/173 (#540)</span>
                </div>
            </div>
            
            <!-- Continue with all cards in Dex order -->
            <div class="card" draggable="true" data-id="sv11w-092" data-name="Sawsbuck" data-number="092/173" data-dex="586" data-set="whiteflare">
                <img src="https://github.com/TheRSigma/BBWFTierList/blob/main/images/whiteflare-92.jpg?raw=true" alt="Sawsbuck" loading="lazy">
                <div class="card-info">
                    <span class="card-name">Sawsbuck</span>
                    <span class="card-number">092/173 (#586)</span>
                </div>
            </div>
            
            <div class="card" draggable="true" data-id="sv11b-092" data-name="Lilligant" data-number="092/173" data-dex="549" data-set="blackbolt">
                <img src="https://github.com/TheRSigma/BBWFTierList/blob/main/images/blackbolt-92.jpg?raw=true" alt="Lilligant" loading="lazy">
                <div class="card-info">
                    <span class="card-name">Lilligant</span>
                    <span class="card-number">092/173 (#549)</span>
                </div>
            </div>
            
            <!-- Add all remaining cards following this pattern -->
            <!-- Example for last card -->
            <div class="card" draggable="true" data-id="sv11w-173" data-name="N" data-number="173/173" data-dex="650" data-set="whiteflare">
                <img src="https://github.com/TheRSigma/BBWFTierList/blob/main/images/whiteflare-173.jpg?raw=true" alt="N" loading="lazy">
                <div class="card-info">
                    <span class="card-name">N</span>
                    <span class="card-number">173/173 (#650)</span>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Streamer Mode
            const streamerMode = document.getElementById('streamer-mode');
            const webcamPosition = document.getElementById('webcam-position');
            const webcamCutout = document.getElementById('webcam-cutout');
            
            streamerMode.addEventListener('change', function() {
                webcamPosition.disabled = !this.checked;
                webcamCutout.style.display = this.checked ? 'block' : 'none';
                updateWebcamPosition();
            });
            
            webcamPosition.addEventListener('change', updateWebcamPosition);
            
            function updateWebcamPosition() {
                webcamCutout.className = 'webcam-cutout ' + `webcam-${webcamPosition.value}`;
            }
            
            // Tier Name Editing
            document.querySelectorAll('.tier-name-input').forEach(input => {
                input.addEventListener('change', saveTierList);
            });
            
            // Drag and Drop
            let draggedCard = null;
            
            document.querySelectorAll('.card').forEach(card => {
                card.addEventListener('dragstart', function(e) {
                    draggedCard = this;
                    this.classList.add('dragging');
                    e.dataTransfer.setData('text/plain', this.dataset.id);
                });
                
                card.addEventListener('dragend', function() {
                    this.classList.remove('dragging');
                });
            });
            
            document.querySelectorAll('.tier-items').forEach(tier => {
                tier.addEventListener('dragover', function(e) {
                    e.preventDefault();
                });
                
                tier.addEventListener('drop', function(e) {
                    e.preventDefault();
                    if (draggedCard) {
                        this.appendChild(draggedCard);
                        saveTierList();
                    }
                });
            });
            
            // Card Pool Drop Zone
            document.getElementById('card-pool').addEventListener('dragover', function(e) {
                e.preventDefault();
            });
            
            document.getElementById('card-pool').addEventListener('drop', function(e) {
                e.preventDefault();
                if (draggedCard) {
                    this.appendChild(draggedCard);
                    saveTierList();
                }
            });
            
            // Save/Load
            document.getElementById('save-btn').addEventListener('click', saveTierList);
            document.getElementById('reset-btn').addEventListener('click', function() {
                if (confirm('Reset tier list to default?')) {
                    localStorage.removeItem('pokemonTierList');
                    location.reload();
                }
            });
            
            function saveTierList() {
                const tierData = {
                    tierNames: {},
                    cardPositions: {}
                };
                
                // Save tier names
                document.querySelectorAll('.tier').forEach(tier => {
                    const tierName = tier.dataset.tier;
                    tierData.tierNames[tierName] = tier.querySelector('.tier-name-input').value;
                });
                
                // Save card positions
                document.querySelectorAll('.tier-items').forEach(tier => {
                    const tierName = tier.parentElement.dataset.tier;
                    tierData.cardPositions[tierName] = Array.from(tier.children).map(card => card.dataset.id);
                });
                
                localStorage.setItem('pokemonTierList', JSON.stringify(tierData));
            }
            
            function loadTierList() {
                const savedData = localStorage.getItem('pokemonTierList');
                if (!savedData) return;
                
                try {
                    const data = JSON.parse(savedData);
                    
                    // Load tier names
                    if (data.tierNames) {
                        Object.entries(data.tierNames).forEach(([tier, name]) => {
                            const input = document.querySelector(`.tier[data-tier="${tier}"] .tier-name-input`);
                            if (input) input.value = name;
                        });
                    }
                    
                    // Load card positions
                    if (data.cardPositions) {
                        Object.entries(data.cardPositions).forEach(([tier, cardIds]) => {
                            const tierContainer = document.querySelector(`.tier[data-tier="${tier}"] .tier-items`);
                            if (tierContainer) {
                                cardIds.forEach(id => {
                                    const card = document.querySelector(`.card[data-id="${id}"]`);
                                    if (card) tierContainer.appendChild(card);
                                });
                            }
                        });
                    }
                } catch (e) {
                    console.error('Error loading tier list:', e);
                }
            }
            
            // Initial load
            loadTierList();
        });
    </script>
</body>
</html>
